{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantan/Development/try/stocker-ttp/frontend/src/components/login.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Input, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./login.css\";\n\nfunction Login(props) {\n  const [credentials, setCredentials] = useState({\n    email_address: \"\",\n    password: \"\"\n  });\n  debugger; // on submit fetch and find/set the id of the current user to redux\n\n  let url = `http://localhost:3000/login`;\n\n  let submitHandler = e => {\n    e.preventDefault();\n    fetch(`${url}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(resp => resp.json()).then(data => {\n      if (data.errors) {\n        alert(\"Incorrect Username/password\");\n      } else {\n        console.log(\"success\");\n        props.login(data);\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(Form, {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"username\",\n    control: Input,\n    onChange: e => setCredentials({ ...credentials,\n      email_address: e.target.value\n    }),\n    label: \"Email Address\",\n    placeholder: \"Email Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"password\",\n    control: Input,\n    onChange: e => setCredentials({ ...credentials,\n      password: e.target.value\n    }),\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Form.Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Log In \"))))));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: data => {\n      dispatch({\n        type: \"LOGIN\",\n        payload: data\n      });\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user_id: state.user_id\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login); // export default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/jonathantan/Development/try/stocker-ttp/frontend/src/components/login.js"],"names":["React","useEffect","useState","Form","Input","Grid","connect","Redirect","Login","props","credentials","setCredentials","email_address","password","url","submitHandler","e","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","resp","json","data","errors","alert","console","log","login","target","value","mapDispatchToProps","dispatch","type","payload","mapStateToProps","state","user_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Input, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./login.css\";\n\nfunction Login(props) {\n  const [credentials, setCredentials] = useState({\n    email_address: \"\",\n    password: \"\"\n  });\n\n  debugger\n\n  // on submit fetch and find/set the id of the current user to redux\n\n  let url = `http://localhost:3000/login`;\n\n  let submitHandler = e => {\n    e.preventDefault();\n\n    fetch(`${url}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.errors) {\n          alert(\"Incorrect Username/password\");\n        } else {\n          console.log(\"success\");\n          props.login(data);\n        }\n      });\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <h3>Sign In</h3>\n        <Form onSubmit={submitHandler}>\n          <Form.Field\n            id=\"username\"\n            control={Input}\n            onChange={e =>\n              setCredentials({ ...credentials, email_address: e.target.value })\n            }\n            label=\"Email Address\"\n            placeholder=\"Email Address\"\n          />\n          <Form.Field\n            id=\"password\"\n            control={Input}\n            onChange={e =>\n              setCredentials({ ...credentials, password: e.target.value })\n            }\n            label=\"Password\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n\n          <Grid>\n            <Grid.Row centered>\n              <Form.Button>Log In </Form.Button>\n            </Grid.Row>\n          </Grid>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: data => {\n      dispatch({ type: \"LOGIN\", payload: data });\n    }\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user_id: state.user_id\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n// export default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}