{"ast":null,"code":"var _jsxFileName = \"/Users/jonathantan/Development/try/stocker-ttp/frontend/src/components/signup.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Grid } from \"semantic-ui-react\";\nimport \"./login.css\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction SignUp(props) {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    password: \"\",\n    email_address: \"\"\n  }); // on submit fetch and find/set the id of the current user to redux\n\n  let submitHandler = e => {\n    e.preventDefault();\n    let history = useHistory();\n    fetch(`http://localhost:3001/api/v1/users`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    }).then(resp => resp.json()).then(data => {\n      if (data.errors) {\n        alert(data.errors[0]);\n      } else {\n        props.login(data);\n        history.push(\"/portfolio\");\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Form, {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    id: \"name\",\n    control: Input,\n    onChange: e => setCredentials({ ...credentials,\n      name: e.target.value\n    }),\n    label: \"Name\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"email\",\n    control: Input,\n    onChange: e => setCredentials({ ...credentials,\n      email_address: e.target.value\n    }),\n    label: \"email address\",\n    placeholder: \"Email Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    id: \"password\",\n    control: Input,\n    onChange: e => setCredentials({ ...credentials,\n      password: e.target.value\n    }),\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Form.Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Sign Up \"))))));\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: data => {\n      dispatch({\n        type: \"LOGIN\",\n        payload: data\n      });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/jonathantan/Development/try/stocker-ttp/frontend/src/components/signup.js"],"names":["React","useState","Form","Input","Grid","connect","useHistory","SignUp","props","credentials","setCredentials","name","password","email_address","submitHandler","e","preventDefault","history","fetch","method","headers","body","JSON","stringify","then","resp","json","data","errors","alert","login","push","target","value","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, {useState } from \"react\";\nimport { Form, Input, Grid } from \"semantic-ui-react\";\nimport \"./login.css\";\nimport { connect } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction SignUp(props) {\n  const [credentials, setCredentials] = useState({\n    name: \"\",\n    password: \"\", \n    email_address: \"\"\n  });\n\n  // on submit fetch and find/set the id of the current user to redux\n\n    let submitHandler = (e) => {\n      e.preventDefault();\n      let history = useHistory();\n\n      fetch(`http://localhost:3001/api/v1/users`, {\n            method: \"POST\", \n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(credentials)\n        })\n        .then(resp => resp.json())\n        .then((data) => {\n             \n            if(data.errors) {\n                alert(data.errors[0])\n            } else {\n              props.login(data);\n            history.push(\"/portfolio\");\n               \n            }\n        })\n\n      \n     \n    };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-form\">\n        <h3>Register</h3>\n        <Form onSubmit={submitHandler}>\n          <Form.Field\n            id=\"name\"\n            control={Input}\n            onChange={e =>\n              setCredentials({ ...credentials, name: e.target.value })\n            }\n            label=\"Name\"\n            placeholder=\"Name\"\n          />\n          <Form.Field\n            id=\"email\"\n            control={Input}\n            onChange={e =>\n              setCredentials({ ...credentials, email_address: e.target.value })\n            }\n            label=\"email address\"\n            placeholder=\"Email Address\"\n          />\n          <Form.Field\n            id=\"password\"\n            control={Input}\n            onChange={e =>\n              setCredentials({ ...credentials, password: e.target.value })\n            }\n            label=\"Password\"\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n\n          <Grid>\n            <Grid.Row centered>\n              <Form.Button>Sign Up </Form.Button>\n            </Grid.Row>\n          </Grid>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: data => {\n      dispatch({ type: \"LOGIN\", payload: data });\n    }\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}